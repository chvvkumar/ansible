---
# Add keys on host
  - name: Add docker repo keys
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      state: present
    become: yes
  
  - name: Add repo
    apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    become: yes


  - name: Add telegraf repo keys
    apt_key:
      url: "https://repos.influxdata.com/influxdb.key"
      state: present
    become: yes
    
  - name: "Debian | Add Telegraf repository"
    apt_repository:
      repo: "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
      filename: "telegraf"
      state: present
    become: yes

  - name: Update packages
    apt: update_cache=yes
    register: apt_result

# Install packages on host
  - name: Install docker-ce
    apt:
      name: "{{ item }}"
      state: latest
    with_items:
      - docker-ce
      - docker-compose
      - open-vm-tools
      - telegraf
  
  - name: Restart telegraf
    service:
      name: telegraf
      state: restarted
      enabled: yes
    notify: "Restart Telegraf"
    become: yes

  - name: Copy telegraf.conf
    copy:
      src: telegraf_docker.conf
      dest: /etc/telegraf/telegraf.conf
      owner: root
      group: root
      mode: 0644
    notify: "Restart Telegraf"
    become: yes

  - name: Modify telegraf user to have access to docker.sock file
    user:
      name: telegraf
      comment: telegraf user
      group: docker
      shell: /bin/bash
      append: yes
    notify: "Restart Telegraf"
    become: yes

  - name: Add user to docker group
    user:
      name: kumar
      groups: docker
      append: yes
    become: yes

  - name: Install python packages
    pip:
      name: "{{ item }}"
    with_items:
      - docker
  
  - name: Create local directories and mount points
    file:
      path: "{{ item }}" 
      state: directory
      mode: u=rwX,g=rX,o=rX
      owner: kumar
      group: docker
      recurse: yes
    with_items:
      - /nfs/tv
      - /nfs/movies
      - /nfs/movies4k
      - /nfs/documentaries
      - /nfs/documentaries4k
      - /nfs/concerts
      - /nfs/music
      - /nfs/demos
      - /downloads
      - /docker/git

  - name: Mount NFS directories
    mount:
      path: "{{ item.path }}"
      src: "{{ item.mount }}"
      fstype: nfs
      state: present
    with_items:
      - { path: '/nfs/tv', mount: 'synology.lan:/volume1/Multimedia/TV Shows' }
      - { path: '/nfs/movies', mount: 'synology.lan:/volume1/Multimedia/Movies' }
      - { path: '/nfs/movies4k', mount: 'synology.lan:/volume1/Multimedia/Movies_4K' }
      - { path: '/nfs/documentaries', mount: 'synology.lan:/volume1/Multimedia/Documentaries' }
      - { path: '/nfs/documentaries4k', mount: 'synology.lan:/volume1/Multimedia/Documentaries_4K' }
      - { path: '/nfs/concerts', mount: 'synology.lan:/volume1/Multimedia/Concerts' }

  - name: Setup default git configuraiton
    git_config:
      name="{{ item.name }}"
      scope=global
      value="{{ item.value }}"
    with_items:
      - {name: "user.name",  value: "Kumar Challa" }
      - {name: "user.email", value: "chvvkumar@gmail.com" }
      - {name: "ui.color",   value: "True" }

  - git:
      repo: git@github.com:chvvkumar/docker.git
      dest: /docker/git
      update: yes
    become_user: kumar
